# Generated by Django 5.2 on 2025-04-22 05:28
from django.db import migrations


def back_fill_orders_items_fks(apps, _):
    OrdersItem = apps.get_model("app", "OrdersItem")
    Product = apps.get_model("app", "Product")
    Order = apps.get_model("app", "Order")

    for idx, order_item in enumerate(OrdersItem.objects.all()):
        if idx % 100 == 0:
            print("OrdersItem Backfill - Progress: ", idx + 1)
        product = Product.objects.get(sku=order_item.sku)
        order = Order.objects.get(orderid=order_item.orderid)
        # handle non-existing users due to data corruption
        if product is None or order is None:
            print(
                f"Cannot find product or order relationship with sku: {order_item.sku} orderid: {order_item.orderid}"
            )
            continue
        order_item.product = product
        order_item.order = order
        order_item.save()


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0006_remove_ordersitem_pk_ordersitem_id_ordersitem_order_and_more"),
    ]

    operations = [
        migrations.RunPython(
            back_fill_orders_items_fks,
            # this allows rewinding the migrations to a previous
            # state by skipping this custom migration script
            reverse_code=migrations.RunPython.noop,
        ),
    ]
